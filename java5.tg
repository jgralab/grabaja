TGraph 2;
Schema de.uni_koblenz.jgralab.grabaja.java5schema.Java5Schema;

/// The graph class /////////////////////////////////////////////////////////////////////////////////////

GraphClass Java5 { name : String, version : String } ;

/// The enums /////////////////////////////////////////////////////////////////////////////////////


// The infix operators of java for expressions like a + b: =, ==, +, -, *, /, &, &&, |, ||, %, ....
EnumDomain InfixOperators( ASSIGNMENT,
                           EQUALS,
                           PLUS,
                           MINUS,
                           MULTIPLICATION,
                           DIVISION,
                           AND,
                           SHORTCIRCUITAND,
                           OR,
                           SHORTCIRCUITOR,
                           MODULO,
                           LEFTSHIFT,
                           RIGHTSHIFT,
                           UNSIGNEDRIGHTSHIFT,
                           UNEQUALS,
                           XOR,
                           PLUSASSIGNMENT,
                           MINUSASSIGNMENT,
                           MULTIPLICATIONASSIGNMENT,
                           DIVISIONASSIGNMENT,
                           GREATER,
                           GREATEREQUALS,
                           LESS,
                           LESSEQUALS,
                           MODULOASSIGNMENT,
                           LEFTSHIFTASSIGNMENT,
                           RIGHTSHIFTASSIGNMENT,
                           UNSIGNEDRIGHTSHIFTASSIGNMENT,
                           ANDASSIGNMENT,
                           ORASSIGNMENT,
                           XORASSIGNMENT,
                           INSTANCEOF ) ;

// The prefix operators of java for expressions like ++a: +, - , !, ~, ++, --
EnumDomain PrefixOperators( PLUS,
                            MINUS,
                            NOT,
                            BITWISECOMPLEMENT,
                            INCREMENT,
                            DECREMENT ) ;

// The postfix operators of java for expressions like a++: --, ++
EnumDomain PostfixOperators( DECREMENT,
                             INCREMENT ) ;

// The primitive types which come with java
EnumDomain BuiltInTypes( VOID,
                         BOOLEAN,
                         BYTE,
                         CHAR,
                         SHORT,
                         INT,
                         LONG,
                         FLOAT,
                         DOUBLE ) ;

// All modifiers of java
EnumDomain Modifiers( PUBLIC,
                      PROTECTED,
                      PRIVATE,
                      STATIC,
                      FINAL,
                      ABSTRACT,
                      VOLATILE,
                      SYNCHRONIZED,
                      NATIVE,
                      STRICTFP,
                      TRANSIENT ) ;

// All posibilities of a method invocation/call in java
EnumDomain MethodInvocationTypes( METHOD,
                                  CONSTRUCTOR,
                                  SUPERMETHOD,
                                  SUPERCONSTRUCTOR,
                                  EXPLICITCONSTRUCTOR ) ;

abstract EdgeClass AttributedEdge from Vertex( 0, * ) to Vertex( 0, * ) { offset : Integer, length : Integer , line : Integer , column : Integer } ;

abstract VertexClass Type : ExternalDeclaration, Member { name : String, fullyQualifiedName : String, external : Boolean } ;
abstract VertexClass Member ;
abstract VertexClass TypeSpecification ;
abstract VertexClass Statement ;
abstract VertexClass Expression : Statement ;
abstract VertexClass ForHead ;
abstract VertexClass FieldDeclaration ;

VertexClass Annotation ;
VertexClass Block : Statement;
VertexClass Identifier { name : String } ;
VertexClass Modifier { type : Modifiers } ;
VertexClass TypeParameterDeclaration : Type ;
VertexClass ParameterDeclaration : FieldDeclaration ;
VertexClass TypeArgument : TypeSpecification ;
VertexClass MethodDeclaration : Member ;

abstract EdgeClass IsExpressionOf : IsStatementOf from Expression (0,*) to Expression (0,1);
abstract EdgeClass IsAnnotationOf : AttributedEdge from Annotation( 0, * ) to Vertex( 1, 1 ) ;
abstract EdgeClass IsArgumentOf : AttributedEdge from Vertex( 0, * ) to Vertex( 0, 1 ) ;
abstract EdgeClass IsConditionOf : AttributedEdge from Expression( 0, 1 ) to Vertex( 1, 1 ) ;
abstract EdgeClass IsExceptionThrownBy : AttributedEdge from TypeSpecification( 0, * ) to Member( 1, 1 ) ;
abstract EdgeClass IsInterfaceOf : AttributedEdge from TypeSpecification( 0, * ) to Type( 1, 1 ) ;
abstract EdgeClass IsSuperClassOf : AttributedEdge from TypeSpecification( 0, 1 ) to Type( 1, 1 ) ;
abstract EdgeClass IsLeftHandSideOf : IsExpressionOf from Expression( 1, 1 ) to Expression( 1, 1 ) ;
abstract EdgeClass IsRightHandSideOf : IsExpressionOf from Expression( 1, 1 ) to Expression( 1, 1 ) ;
abstract EdgeClass IsLoopBodyOf : IsStatementOf from Statement( 1, 1 ) to Statement( 1, 1 ) ;
abstract EdgeClass IsModifierOf : AttributedEdge from Modifier( 0, * ) to Vertex( 1, 1 ) ;
abstract EdgeClass IsParameterOf : AttributedEdge from ParameterDeclaration( 0, * ) to Vertex( 1, 1 ) ;
abstract EdgeClass IsStatementOf : AttributedEdge from Statement( 0, * ) to Vertex( 1, 1 ) ;
abstract EdgeClass IsTypeOf : AttributedEdge from Vertex( 0, * ) to Vertex( 1, 1 ) ;
abstract EdgeClass IsTypeParameterOf : AttributedEdge from Vertex( 0, * ) to Vertex( 1, 1 ) ;
abstract EdgeClass IsBlockOf : IsStatementOf from Block( 1, 1 ) to Vertex( 1, 1  );

EdgeClass IsTypeArgumentOfTypeSpecification : AttributedEdge from TypeArgument( 0, * ) to TypeSpecification( 1, 1 ) ;

VertexClass Program { name : String } ;
VertexClass TranslationUnit ;
EdgeClass IsTranslationUnitIn from TranslationUnit( 0, * ) to Program( 1, 1 ) ;
abstract VertexClass FoldGraphReference { lengthOfFile : Integer } ;
VertexClass SourceUsage : FoldGraphReference ;
EdgeClass IsSourceUsageIn from SourceUsage( 1, 1 ) to TranslationUnit( 1, 1 );
VertexClass SourceFile { name: String } ;
EdgeClass IsPrimarySourceFor from SourceFile( 1, 1 ) to TranslationUnit( 1, 1 ) ;
EdgeClass IsSourceFor from SourceFile( 1, 1 ) to SourceUsage( 1, 1 ) ;

abstract VertexClass ExternalDeclaration ;
EdgeClass IsExternalDeclarationIn : AttributedEdge from ExternalDeclaration( 0, * ) to SourceUsage( 1, 1 ) ;

abstract VertexClass ImportDefinition : ExternalDeclaration ;
VertexClass ClassImportDefinition : ImportDefinition ;
VertexClass PackageImportDefinition : ImportDefinition ;

VertexClass JavaPackage { fullyQualifiedName : String } ;
VertexClass PackageDefinition : ExternalDeclaration;
EdgeClass IsPackageNameOf : AttributedEdge from QualifiedName( 1, 1 ) to PackageDefinition( 1,* );
EdgeClass IsPartOf from TranslationUnit( 0, * ) to JavaPackage( 1, 1 ) ;
EdgeClass IsPackageOf from JavaPackage( 1, * ) to Program( 1, 1 ) ;
EdgeClass IsSubPackageOf from JavaPackage( 0, 1 ) to JavaPackage( 1, 1 ) ;

VertexClass Comment ;
VertexClass SingleLineComment : Comment ;
VertexClass MultiLineComment : Comment ;
VertexClass JavaDocComment : Comment ;
EdgeClass IsCommentIn : AttributedEdge from Comment( 0, * ) to TranslationUnit( 1, 1 ) ;

EdgeClass IsAnnotationNameOf : AttributedEdge from QualifiedName( 1, 1 ) to Annotation( 1, 1 ) ;
EdgeClass IsAnnotationArgumentOf : AttributedEdge from Expression( 0, * ) to Annotation( 1, 1 ) ;

EdgeClass IsAnnotationOfPackage : IsAnnotationOf from Annotation( 0, * ) to PackageDefinition( 1, 1 ) ;

EdgeClass IsStatementOfBody : IsStatementOf from Statement( 0, * ) to Block( 1, 1 ) ;
EdgeClass IsTypeIn : AttributedEdge from Type( 0, * ) to Statement( 1, 1 ) ;

VertexClass SimpleArgument ;
VertexClass WildcardArgument ;
EdgeClass IsSimpleArgumentOf : IsArgumentOf from SimpleArgument( 0, * ) to TypeArgument( 1, 1 ) ;
EdgeClass IsWildcardArgumentOf : IsArgumentOf from WildcardArgument( 0, * ) to TypeArgument( 1, 1 ) ;

EdgeClass IsTypeOfSimpleArgument : IsTypeOf from TypeSpecification( 1, 1 ) to SimpleArgument( 1, 1 ) ;

EdgeClass IsLowerBoundOfWildcardArgument : AttributedEdge from TypeSpecification( 0, 1 ) to WildcardArgument( 1, 1 ) ;
EdgeClass IsUpperBoundOfWildcardArgument : AttributedEdge from TypeSpecification( 0, 1 ) to WildcardArgument( 1, 1 ) ;

VertexClass TypeParameterUsage : TypeSpecification ;
EdgeClass IsTypeParameterUsageNameOf : AttributedEdge from Identifier( 1, 1 ) to TypeParameterUsage( 1, 1 ) ;

VertexClass ArrayType : TypeSpecification { dimensions : Integer } ;
EdgeClass IsElementTypeOf : IsTypeOf from TypeSpecification( 1, 1 ) to ArrayType( 1, 1 ) ;

VertexClass QualifiedName : TypeSpecification { fullyQualifiedName : String } ;
VertexClass QualifiedType : QualifiedName, Expression ;
EdgeClass IsQualifiedNameOf : AttributedEdge from QualifiedName( 0, * ) to Vertex( 0, * ) ;
EdgeClass IsNameOf : AttributedEdge from Identifier( 0, * ) to QualifiedName( 0, * ) ;
EdgeClass IsImportedTypeOf : AttributedEdge from QualifiedName( 1, 1 ) to ImportDefinition( 1, 1 ) ;
EdgeClass IsTypeDefinitionOf from Type( 0, * ) to TypeSpecification( 1, 1 );

VertexClass BuiltInType : TypeSpecification { type : BuiltInTypes } ;

EdgeClass IsTypeParameterDeclarationNameOf : AttributedEdge from Identifier( 1, 1 ) to TypeParameterDeclaration( 1, 1 ) ;
EdgeClass IsUpperBoundOfTypeParameter : AttributedEdge from TypeSpecification( 0, * ) to TypeParameterDeclaration( 1, 1 ) ;

EdgeClass IsAnnotationOfType : IsAnnotationOf from Annotation( 0, * ) to Type( 1, 1 ) ;

VertexClass ClassDefinition : Type ;
EdgeClass IsModifierOfClass : IsModifierOf from Modifier( 0, * ) to ClassDefinition( 1, 1 ) ;
EdgeClass IsClassNameOf : AttributedEdge from Identifier( 1, 1 ) to ClassDefinition( 1, 1 ) ;
EdgeClass IsTypeParameterOfClass : IsTypeParameterOf from TypeParameterDeclaration( 0, * ) to ClassDefinition( 1, 1 ) ;
EdgeClass IsSuperClassOfClass : IsSuperClassOf from TypeSpecification( 0, 1 ) to ClassDefinition( 1, 1 ) ;
EdgeClass IsInterfaceOfClass : IsInterfaceOf from TypeSpecification( 0, * ) to ClassDefinition( 1, 1 ) ;
EdgeClass IsClassBlockOf : IsBlockOf from Block( 1, 1 ) to ClassDefinition( 1, 1 ) ;

VertexClass InterfaceDefinition : Type ;
EdgeClass IsModifierOfInterface : IsModifierOf from Modifier( 0, * ) to InterfaceDefinition( 1, 1 ) ;
EdgeClass IsInterfaceNameOf : AttributedEdge from Identifier( 1, 1 ) to InterfaceDefinition( 1, 1 ) ;
EdgeClass IsTypeParameterOfInterface : IsTypeParameterOf from TypeParameterDeclaration( 0, * ) to InterfaceDefinition( 1, 1 ) ;
EdgeClass IsSuperClassOfInterface : IsSuperClassOf from TypeSpecification( 0, 1 ) to InterfaceDefinition( 1, 1 ) ;
EdgeClass IsInterfaceBlockOf : IsBlockOf from Block( 1, 1 ) to InterfaceDefinition( 1, 1 ) ;


VertexClass VariableDeclaration : FieldDeclaration, Statement ;

VertexClass EnumConstant : Member, FieldDeclaration ;
EdgeClass IsAnnotationOfEnumConstant : IsAnnotationOf from Annotation( 1, 1 ) to EnumConstant( 1, 1 ) ;
EdgeClass IsEnumConstantNameOf : AttributedEdge from Identifier( 1, 1 ) to EnumConstant( 1, 1 ) ;
EdgeClass IsArgumentOfEnumConstant : IsArgumentOf from Expression( 0, * ) to EnumConstant( 1, 1 ) ;
EdgeClass IsEnumConstantBlockOf : IsBlockOf from Block( 1, 1 ) to EnumConstant( 1, 1 );

VertexClass EnumDefinition : Type ;
EdgeClass IsModifierOfEnum : IsModifierOf from Modifier( 0, * ) to EnumDefinition( 1, 1 ) ;
EdgeClass IsEnumNameOf : AttributedEdge from Identifier( 1, 1 ) to EnumDefinition( 1, 1 ) ;
EdgeClass IsInterfaceOfEnum : IsInterfaceOf from TypeSpecification( 0, * ) to EnumDefinition( 1, 1 ) ;
EdgeClass IsEnumBlockOf : IsBlockOf from Block( 1, 1 ) to EnumDefinition( 1, 1 ) ;

VertexClass AnnotationDefinition : Type ;
EdgeClass IsModifierOfAnnotation : IsModifierOf from Modifier( 0, * ) to AnnotationDefinition( 1, 1 ) ;
EdgeClass IsAnnotationDefinitionNameOf : AttributedEdge from Identifier( 1, 1 ) to AnnotationDefinition( 1, 1 ) ;
EdgeClass IsMetaAnnotationOf : IsAnnotationOf from Annotation( 0, * ) to AnnotationDefinition( 1, 1 ) ;
EdgeClass IsAnnotationBlockOf : IsBlockOf from Block( 1, 1 ) to AnnotationDefinition( 1, 1 ) ;

abstract EdgeClass IsDeclarationOf from Vertex (0,*) to Vertex (0,*);

VertexClass FieldAccess : Expression ;
EdgeClass IsFieldContainerOf : AttributedEdge from Expression( 0, 1 ) to FieldAccess( 1, 1 ) ;
EdgeClass IsFieldNameOf : AttributedEdge from Identifier( 1, 1 ) to FieldAccess( 1, 1 ) ;
EdgeClass IsArrayElementIndexOf : AttributedEdge from Expression( 0, * ) to FieldAccess( 1, 1 ) ;
EdgeClass IsDeclarationOfAccessedField: IsDeclarationOf from Vertex( 0, * ) to FieldAccess( 1, 1 ) ;

VertexClass MethodInvocation : Expression { type : MethodInvocationTypes } ;
EdgeClass IsMethodContainerOf : AttributedEdge from Expression( 0, 1 ) to MethodInvocation( 1, 1 ) ;
EdgeClass IsNameOfInvokedMethod : AttributedEdge from Identifier( 1, 1 ) to MethodInvocation( 1, 1 ) ;
EdgeClass IsArgumentOfMethodInvocation : IsArgumentOf from Expression( 0, * ) to MethodInvocation( 1, 1 ) ;
EdgeClass IsDeclarationOfInvokedMethod: IsDeclarationOf from Member( 0, * ) to MethodInvocation( 1, 1 ) ;

VertexClass ConditionalExpression : Expression ;
EdgeClass IsConditionOfExpression : IsConditionOf from Expression( 1, 1 ) to ConditionalExpression( 1, 1 ) ;
EdgeClass IsMatchOf : AttributedEdge from Expression( 1, 1 ) to ConditionalExpression( 1, 1 ) ;
EdgeClass IsMismatchOf : AttributedEdge from Expression( 1, 1 ) to ConditionalExpression( 1, 1 ) ;

VertexClass BuiltInCast : Expression ;
EdgeClass IsCastedBuiltInTypeOf : IsTypeOf from BuiltInType( 1, 1 ) to BuiltInCast( 1, 1 ) ;
EdgeClass IsCastedValueOf : AttributedEdge from Expression( 1, 1 ) to BuiltInCast( 1, 1 ) ;

VertexClass ClassCast : Expression ;
EdgeClass IsCastedTypeOf : IsTypeOf from TypeSpecification( 1, 1 ) to ClassCast( 1, 1 );
EdgeClass IsCastedObjectOf : AttributedEdge from Expression( 1, 1 ) to ClassCast( 1, 1 );

VertexClass InfixExpression : Expression { operator :  InfixOperators } ;
EdgeClass IsLeftHandSideOfInfixExpression : IsLeftHandSideOf from Expression( 1, 1 ) to InfixExpression( 1, 1 ) ;
EdgeClass IsRightHandSideOfInfixExpression : IsRightHandSideOf from Expression( 1, 1 ) to InfixExpression( 1, 1 ) ;

VertexClass PrefixExpression : Expression { operator :  PrefixOperators } ;
EdgeClass IsRightHandSideOfPrefixExpression : IsRightHandSideOf from Expression( 1, 1 ) to PrefixExpression( 1, 1 ) ;

VertexClass PostfixExpression: Expression { operator :  PostfixOperators } ;
EdgeClass IsLeftHandSideOfPostfixExpression : IsLeftHandSideOf from Expression( 1, 1 ) to PostfixExpression( 1, 1 ) ;

VertexClass Null : Expression ;

VertexClass BooleanConstant : Expression { value : Boolean } ;

VertexClass FloatConstant : Expression { value : Double, literal : String } ;

VertexClass DoubleConstant : Expression { value : Double, literal : String } ;

VertexClass IntegerConstant : Expression { value : Long, literal : String } ;

VertexClass LongConstant : Expression { value : Long, literal : String } ;

VertexClass CharConstant : Expression { value : Integer, literal : String } ;

VertexClass StringConstant : Expression { value : String } ;

VertexClass ArrayInitializer : Expression ;
EdgeClass IsSizeOf : AttributedEdge from Expression( 0, 1 ) to ArrayInitializer( 1, 1 );
EdgeClass IsContentOf : AttributedEdge from Expression( 0, * ) to ArrayInitializer( 1, 1 );

VertexClass ArrayCreation : Expression ;
EdgeClass IsElementTypeOfCreatedArray : IsTypeOf from TypeSpecification( 0, 1 ) to ArrayCreation( 1, 1 ) ;
EdgeClass IsDimensionInitializerOf : AttributedEdge from ArrayInitializer( 1, * ) to ArrayCreation( 1, 1 ) ;

VertexClass ObjectCreation : Expression ;
EdgeClass IsTypeOfObject : AttributedEdge from TypeSpecification( 1, 1 ) to ObjectCreation( 1, 1 );
EdgeClass IsConstructorInvocationOf : AttributedEdge from MethodInvocation( 1, 1 ) to ObjectCreation( 1, 1 ) ;

VertexClass VariableInitializer : Expression ;
EdgeClass IsInitializerOf : IsExpressionOf from Expression( 1, 1 ) to VariableInitializer( 1, 1 ) ;

EdgeClass IsAnnotationOfMember : IsAnnotationOf from Annotation( 0, * ) to Member( 1, 1 ) ;
EdgeClass IsMemberOf : AttributedEdge from Member( 0, * ) to Block( 1, 1 ) ;

VertexClass Field : Member ;
EdgeClass IsFieldCreationOf : AttributedEdge from Statement( 1, 1 ) to Field( 1, 1 ) ;

VertexClass AnnotationField : Member ;
EdgeClass IsModifierOfAnnotationField : IsModifierOf from Modifier( 0, * ) to AnnotationField( 1, 1 ) ;
EdgeClass IsTypeOfAnnotationField : AttributedEdge from TypeSpecification( 1, 1 ) to AnnotationField( 1, 1 );
EdgeClass IsAnnotationFieldNameOf : AttributedEdge from Identifier( 1, 1 ) to AnnotationField( 1, 1 );
EdgeClass IsDefaultValueOf : AttributedEdge from Expression( 1, 1 ) to AnnotationField( 1, 1 );

VertexClass ConstructorDefinition : Member ;
EdgeClass IsModifierOfConstructor : IsModifierOf from Modifier( 0, * ) to ConstructorDefinition( 1, 1 ) ;
EdgeClass IsTypeParameterOfConstructor : IsTypeParameterOf from TypeParameterDeclaration( 0, * ) to ConstructorDefinition( 1, 1 ) ;
EdgeClass IsNameOfConstructor : AttributedEdge from Identifier( 1, 1 ) to ConstructorDefinition( 1, 1 ) ;
EdgeClass IsParameterOfConstructor : IsParameterOf from ParameterDeclaration( 0, * ) to ConstructorDefinition( 1, 1 ) ;
EdgeClass IsExceptionThrownByConstructor : IsExceptionThrownBy from TypeSpecification( 0, * ) to ConstructorDefinition( 1, 1 ) ;
EdgeClass IsBodyOfConstructor : IsStatementOf from Block( 1, 1 ) to ConstructorDefinition( 1, 1 ) ;

VertexClass StaticInitializerDefinition : Member ;
EdgeClass IsBodyOfStaticInitializer : IsStatementOf from Block( 1, 1 ) to StaticInitializerDefinition( 1, 1 ) ;

VertexClass StaticConstructorDefinition : Member ;
EdgeClass IsBodyOfStaticConstructor : IsStatementOf from Block( 1, 1 ) to StaticConstructorDefinition( 1, 1 ) ;

EdgeClass IsModifierOfMethod : IsModifierOf from Modifier( 0, * ) to MethodDeclaration( 1, 1 ) ;
EdgeClass IsReturnTypeOf : IsTypeOf from TypeSpecification( 1, 1 ) to MethodDeclaration( 1, 1 ) ;
EdgeClass IsTypeParameterOfMethod : IsTypeParameterOf from TypeParameterDeclaration( 0, * ) to MethodDeclaration( 1, 1 ) ;
EdgeClass IsNameOfMethod : AttributedEdge from Identifier( 1, 1 ) to MethodDeclaration( 1, 1 ) ;
EdgeClass IsParameterOfMethod : IsParameterOf from ParameterDeclaration( 0, * ) to MethodDeclaration( 1, 1 ) ;
EdgeClass IsExceptionThrownByMethod : IsExceptionThrownBy from TypeSpecification( 0, * ) to MethodDeclaration( 1, 1 ) ;

VertexClass MethodDefinition : MethodDeclaration ;
EdgeClass IsBodyOfMethod : AttributedEdge from Block( 1, 1 ) to MethodDefinition( 1, 1 ) ;
EdgeClass IsCalledByMethod from MethodDeclaration (0,*) to MethodDeclaration(0, *);



EdgeClass IsModifierOfParameter : IsModifierOf from Modifier( 0, 1 ) to ParameterDeclaration( 1, 1 ) ;
EdgeClass IsTypeOfParameter : IsTypeOf from TypeSpecification( 1, 1 ) to ParameterDeclaration( 1, 1 ) ;
EdgeClass IsParameterNameOf : AttributedEdge from Identifier( 1, 1 ) to ParameterDeclaration( 1, 1 ) ;
VertexClass VariableLengthDeclaration :  ParameterDeclaration ;

VertexClass Label : Statement ;
EdgeClass IsLabelNameOf : AttributedEdge from Identifier( 1, 1 ) to Label( 1, 1 ) ;
EdgeClass IsAttachedTo : IsStatementOf from Statement( 1, 1 ) to Label( 1, 1 ) ;

VertexClass If : Statement ;
EdgeClass IsConditionOfIf : IsConditionOf from Expression( 1, 1 ) to If( 1, 1 ) ;
EdgeClass IsThenOf : IsStatementOf from Statement( 1, 1 ) to If( 1, 1 ) ;
EdgeClass IsElseOf : IsStatementOf from Statement( 0, 1 ) to If( 1, 1 ) ;

VertexClass For : Statement ;
EdgeClass IsHeadOfFor :  AttributedEdge from ForHead( 1, 1 ) to For( 1, 1 ) ;
EdgeClass IsLoopBodyOfFor : IsLoopBodyOf from Statement( 1, 1 ) to For( 1, 1 ) ;
VertexClass TraditionalForClause : ForHead ;
EdgeClass IsRunVariableInitializationOf : AttributedEdge from Statement( 0, * ) to TraditionalForClause( 1, 1 ) ;
EdgeClass IsForConditionOf : IsConditionOf from Expression( 0, 1 ) to TraditionalForClause( 1, 1 ) ;
EdgeClass IsIteratorOf : IsStatementOf from Expression( 0, * ) to TraditionalForClause( 1, 1 ) ;
VertexClass ForEachClause : ForHead;
EdgeClass IsParameterOfForEachClause : IsParameterOf from ParameterDeclaration( 1, 1 ) to ForEachClause( 1, 1 ) ;
EdgeClass IsEnumerableOf : AttributedEdge from Expression( 1, 1 ) to ForEachClause( 1, 1 ) ;

VertexClass EmptyStatement : Statement ;

VertexClass While : Statement ;
EdgeClass IsLoopBodyOfWhile : IsLoopBodyOf from Statement( 1, 1 ) to While( 1, 1 ) ;
EdgeClass IsConditionOfWhile : IsConditionOf from Expression( 1, 1 ) to While( 1, 1 ) ;

VertexClass DoWhile : Statement ;
EdgeClass IsLoopBodyOfDoWhile : IsLoopBodyOf from Statement( 1, 1 ) to DoWhile( 1, 1 ) ;
EdgeClass IsConditionOfDoWhile : IsConditionOf from Expression( 1, 1 ) to DoWhile( 1, 1 ) ;

VertexClass Break : Statement ;
EdgeClass IsBreakTargetOf : AttributedEdge from Label( 0, 1 ) to Break( 1, 1 ) ;

VertexClass Continue : Statement ;
EdgeClass IsContinueTargetOf : AttributedEdge from Label( 0, 1 ) to Continue( 1, 1 ) ;

VertexClass Return : Statement ;
EdgeClass IsReturnedBy : IsStatementOf from Expression( 0, 1 ) to Return( 1, 1 ) ;

VertexClass Switch : Statement ;
VertexClass Case : Statement ;
VertexClass Default : Statement ;
EdgeClass IsSwitchArgumentOf : IsArgumentOf from Expression( 1, 1 ) to Switch( 1, 1 ) ;
EdgeClass IsCaseOf : IsStatementOf from Case( 0, * ) to Switch( 1, 1 ) ;
EdgeClass IsDefaultCaseOf : IsStatementOf from Default( 0, 1 ) to Switch( 1, 1 ) ;
EdgeClass IsCaseConditionOf : IsConditionOf from Expression( 1, 1 ) to Case( 1, 1 ) ;
EdgeClass IsStatementOfCase : IsStatementOf from Statement( 0, * ) to Case( 1, 1 ) ;
EdgeClass IsStatementOfDefaultCase : IsStatementOf from Statement( 0, * ) to Default( 1, 1 ) ;

VertexClass Try : Statement ;
VertexClass Catch : Statement ;

EdgeClass IsBodyOfTry : IsStatementOf from Block( 1, 1 ) to Try( 1, 1 ) ;
EdgeClass IsHandlerOf : IsStatementOf from Catch( 0, * ) to Try( 1, 1 ) ;
EdgeClass IsCaughtExceptionOf : AttributedEdge from ParameterDeclaration( 1, 1 ) to Catch( 1, 1 ) ;
EdgeClass IsBodyOfCatch : IsStatementOf from Block( 1, 1 ) to Catch( 1, 1 ) ;
EdgeClass IsBodyOfFinally : IsStatementOf from Block( 0, 1 ) to Try( 1, 1 ) ;

VertexClass Throw : Statement ;
EdgeClass IsThrownExceptionOf : AttributedEdge from Expression( 1, 1 ) to Throw( 1, 1 ) ;

VertexClass Synchronized : Statement ;
EdgeClass IsMonitorOf : AttributedEdge from Expression( 1, 1 ) to Synchronized( 1, 1 ) ;
EdgeClass IsSynchronizedBodyOf : AttributedEdge from Block( 1, 1 ) to Synchronized( 1, 1 ) ;

VertexClass Assert : Statement ;
EdgeClass IsConditionOfAssert : IsConditionOf from Expression( 1, 1 ) to Assert( 1, 1 ) ;
EdgeClass IsMessageOf : AttributedEdge from Expression( 0, 1 ) to Assert( 1, 1 ) ;

EdgeClass IsAnnotationOfVariable : IsAnnotationOf from Annotation( 0, * ) to VariableDeclaration( 1, 1 ) ;
EdgeClass IsModifierOfVariable : IsModifierOf from Modifier( 0, * ) to VariableDeclaration( 1, 1 ) ;
EdgeClass IsTypeOfVariable : IsTypeOf from TypeSpecification( 1, 1 ) to VariableDeclaration( 1, 1 ) ;
EdgeClass IsVariableNameOf : AttributedEdge from Identifier( 1, * ) to VariableDeclaration( 1, 1 ) ;
EdgeClass IsInitializerOfVariable : IsStatementOf from Expression ( 0, 1 ) to VariableDeclaration( 1, 1 ) ;
