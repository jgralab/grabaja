Schema javaextractor.schema.Java5Schema;
GraphClass Java5 { name: String, version: String };
EnumDomain PostfixOperators (DECREMENT, INCREMENT);
EnumDomain BuiltInTypes (VOID, BOOLEAN, BYTE, CHAR, SHORT, INT, LONG, FLOAT, DOUBLE);
EnumDomain InfixOperators (ASSIGNMENT, EQUALS, PLUS, MINUS, MULTIPLICATION, DIVISION, AND, SHORTCIRCUITAND, OR, SHORTCIRCUITOR, MODULO, LEFTSHIFT, RIGHTSHIFT, UNSIGNEDRIGHTSHIFT, UNEQUALS, XOR, PLUSASSIGNMENT, MINUSASSIGNMENT, MULTIPLICATIONASSIGNMENT, DIVISIONASSIGNMENT, GREATER, GREATEREQUALS, LESS, LESSEQUALS, MODULOASSIGNMENT, LEFTSHIFTASSIGNMENT, RIGHTSHIFTASSIGNMENT, UNSIGNEDRIGHTSHIFTASSIGNMENT, ANDASSIGNMENT, ORASSIGNMENT, XORASSIGNMENT, INSTANCEOF);
EnumDomain MethodInvocationTypes (METHOD, CONSTRUCTOR, SUPERMETHOD, SUPERCONSTRUCTOR, EXPLICITCONSTRUCTOR);
EnumDomain PrefixOperators (PLUS, MINUS, NOT, BITWISECOMPLEMENT, INCREMENT, DECREMENT);
EnumDomain Modifiers (PUBLIC, PROTECTED, PRIVATE, STATIC, FINAL, ABSTRACT, VOLATILE, SYNCHRONIZED, NATIVE, STRICTFP, TRANSIENT);
VertexClass Comment;
VertexClass SourceFile { name: String };
VertexClass JavaDocComment: Comment;
abstract VertexClass TypeSpecification;
VertexClass JavaPackage { fullyQualifiedName: String };
VertexClass MultiLineComment: Comment;
VertexClass ArrayType: TypeSpecification { dimensions: Integer };
abstract VertexClass Member;
VertexClass TranslationUnit;
VertexClass SingleLineComment: Comment;
abstract VertexClass ExternalDeclaration;
VertexClass SimpleArgument;
VertexClass ConstructorDefinition: Member;
abstract VertexClass ImportDefinition: ExternalDeclaration;
abstract VertexClass Statement;
VertexClass Synchronized: Statement;
VertexClass AnnotationField: Member;
abstract VertexClass FoldGraphReference { lengthOfFile: Integer };
VertexClass DoWhile: Statement;
VertexClass Assert: Statement;
VertexClass Identifier { name: String };
VertexClass Block: Statement;
VertexClass QualifiedName: TypeSpecification { fullyQualifiedName: String };
VertexClass WildcardArgument;
VertexClass While: Statement;
abstract VertexClass ForHead;
VertexClass Throw: Statement;
VertexClass StaticInitializerDefinition: Member;
VertexClass TypeParameterUsage: TypeSpecification;
VertexClass Modifier { type: Modifiers };
VertexClass If: Statement;
VertexClass Try: Statement;
VertexClass PackageDefinition: ExternalDeclaration;
abstract VertexClass Type: ExternalDeclaration, Member { external: Boolean, fullyQualifiedName: String, name: String };
abstract VertexClass FieldDeclaration;
VertexClass BuiltInType: TypeSpecification { type: BuiltInTypes };
VertexClass Program { name: String };
VertexClass ClassImportDefinition: ImportDefinition;
VertexClass Default: Statement;
VertexClass Annotation;
VertexClass Break: Statement;
VertexClass InterfaceDefinition: Type;
VertexClass AnnotationDefinition: Type;
VertexClass StaticConstructorDefinition: Member;
VertexClass Label: Statement;
VertexClass For: Statement;
VertexClass SourceUsage: FoldGraphReference;
VertexClass TypeArgument: TypeSpecification;
VertexClass Continue: Statement;
abstract VertexClass Expression: Statement;
VertexClass Case: Statement;
VertexClass TraditionalForClause: ForHead;
VertexClass MethodDeclaration: Member;
VertexClass TypeParameterDeclaration: Type;
VertexClass Return: Statement;
VertexClass VariableInitializer: Expression;
VertexClass ClassDefinition: Type;
VertexClass VariableDeclaration: FieldDeclaration, Statement;
VertexClass PackageImportDefinition: ImportDefinition;
VertexClass EnumDefinition: Type;
VertexClass Field: Member;
VertexClass EmptyStatement: Statement;
VertexClass Switch: Statement;
VertexClass ParameterDeclaration: FieldDeclaration;
VertexClass ArrayCreation: Expression;
VertexClass VariableLengthDeclaration: ParameterDeclaration;
VertexClass PrefixExpression: Expression { operator: PrefixOperators };
VertexClass LongConstant: Expression { literal: String, value: Long };
VertexClass ForEachClause: ForHead;
VertexClass MethodDefinition: MethodDeclaration;
VertexClass Catch: Statement;
VertexClass InfixExpression: Expression { operator: InfixOperators };
VertexClass EnumConstant: FieldDeclaration, Member;
VertexClass CharConstant: Expression { literal: String, value: Integer };
VertexClass ClassCast: Expression;
VertexClass DoubleConstant: Expression { literal: String, value: Double };
VertexClass Null: Expression;
VertexClass QualifiedType: QualifiedName, Expression;
VertexClass StringConstant: Expression { value: String };
VertexClass MethodInvocation: Expression { type: MethodInvocationTypes };
VertexClass PostfixExpression: Expression { operator: PostfixOperators };
VertexClass ArrayInitializer: Expression;
VertexClass ConditionalExpression: Expression;
VertexClass ObjectCreation: Expression;
VertexClass BuiltInCast: Expression;
VertexClass FieldAccess: Expression;
VertexClass IntegerConstant: Expression { literal: String, value: Long };
VertexClass BooleanConstant: Expression { value: Boolean };
VertexClass FloatConstant: Expression { literal: String, value: Double };
EdgeClass IsSourceFor from SourceFile (1,1) to SourceUsage (1,1);
EdgeClass IsPackageOf from JavaPackage (1,*) to Program (1,1);
EdgeClass IsTypeDefinitionOf from Type (0,*) to TypeSpecification (1,1);
abstract EdgeClass AttributedEdge from Vertex (0,*) to Vertex (0,*) { column: Integer, length: Integer, line: Integer, offset: Integer };
EdgeClass IsConstructorInvocationOf: AttributedEdge from MethodInvocation (1,1) to ObjectCreation (1,1);
abstract EdgeClass IsModifierOf: AttributedEdge from Modifier (0,*) to Vertex (1,1);
EdgeClass IsArrayElementIndexOf: AttributedEdge from Expression (0,*) to FieldAccess (1,1);
EdgeClass IsTranslationUnitIn from TranslationUnit (0,*) to Program (1,1);
EdgeClass IsFieldCreationOf: AttributedEdge from Statement (1,1) to Field (1,1);
EdgeClass IsPrimarySourceFor from SourceFile (1,1) to TranslationUnit (1,1);
EdgeClass IsIteratorOf: AttributedEdge from Expression (0,*) to TraditionalForClause (1,1);
EdgeClass IsNameOfInvokedMethod: AttributedEdge from Identifier (1,1) to MethodInvocation (1,1);
EdgeClass IsCastedObjectOf: AttributedEdge from Expression (1,1) to ClassCast (1,1);
EdgeClass IsAnnotationArgumentOf: AttributedEdge from Expression (0,*) to Annotation (1,1);
EdgeClass IsTypeArgumentOfTypeSpecification: AttributedEdge from TypeArgument (0,*) to TypeSpecification (1,1);
EdgeClass IsBodyOfStaticInitializer: AttributedEdge from Block (1,1) to StaticInitializerDefinition (1,1);
EdgeClass IsBodyOfFinally: AttributedEdge from Block (0,1) to Try (1,1);
EdgeClass IsInitializerOf: AttributedEdge from Expression (1,1) to VariableInitializer (1,1);
abstract EdgeClass IsParameterOf: AttributedEdge from ParameterDeclaration (0,*) to Vertex (1,1);
EdgeClass IsInitializerOfVariable: AttributedEdge from Expression (0,1) to VariableDeclaration (1,1);
EdgeClass IsReturnedBy: AttributedEdge from Expression (0,1) to Return (1,1);
EdgeClass IsContentOf: AttributedEdge from Expression (0,*) to ArrayInitializer (1,1);
EdgeClass IsAnnotationNameOf: AttributedEdge from QualifiedName (1,1) to Annotation (1,1);
EdgeClass IsDimensionInitializerOf: AttributedEdge from ArrayInitializer (1,*) to ArrayCreation (1,1);
EdgeClass IsFieldContainerOf: AttributedEdge from Expression (0,1) to FieldAccess (1,1);
EdgeClass IsTypeOfObject: AttributedEdge from TypeSpecification (1,1) to ObjectCreation (1,1);
EdgeClass IsModifierOfAnnotation: IsModifierOf from Modifier (0,*) to AnnotationDefinition (1,1);
EdgeClass IsModifierOfAnnotationField: IsModifierOf from Modifier (0,*) to AnnotationField (1,1);
abstract EdgeClass IsLoopBodyOf: AttributedEdge from Statement (1,1) to Statement (1,1);
EdgeClass IsParameterNameOf: AttributedEdge from Identifier (1,1) to ParameterDeclaration (1,1);
EdgeClass IsNameOfConstructor: AttributedEdge from Identifier (1,1) to ConstructorDefinition (1,1);
EdgeClass IsFieldNameOf: AttributedEdge from Identifier (1,1) to FieldAccess (1,1);
EdgeClass IsUpperBoundOfWildcardArgument: AttributedEdge from TypeSpecification (0,1) to WildcardArgument (1,1);
EdgeClass IsSourceUsageIn from SourceUsage (1,1) to TranslationUnit (1,1);
EdgeClass IsModifierOfVariable: IsModifierOf from Modifier (0,*) to VariableDeclaration (1,1);
EdgeClass IsClassNameOf: AttributedEdge from Identifier (1,1) to ClassDefinition (1,1);
EdgeClass IsBodyOfStaticConstructor: AttributedEdge from Block (1,1) to StaticConstructorDefinition (1,1);
EdgeClass IsModifierOfEnum: IsModifierOf from Modifier (0,*) to EnumDefinition (1,1);
EdgeClass IsTypeParameterUsageNameOf: AttributedEdge from Identifier (1,1) to TypeParameterUsage (1,1);
EdgeClass IsBodyOfMethod: AttributedEdge from Block (1,1) to MethodDefinition (1,1);
EdgeClass IsImportedTypeOf: AttributedEdge from QualifiedName (1,1) to ImportDefinition (1,1);
EdgeClass IsAnnotationFieldNameOf: AttributedEdge from Identifier (1,1) to AnnotationField (1,1);
EdgeClass IsModifierOfClass: IsModifierOf from Modifier (0,*) to ClassDefinition (1,1);
EdgeClass IsModifierOfConstructor: IsModifierOf from Modifier (0,*) to ConstructorDefinition (1,1);
abstract EdgeClass IsLeftHandSideOf: AttributedEdge from Expression (1,1) to Expression (1,1);
EdgeClass IsDeclarationOfAccessedField from Vertex (0,*) to FieldAccess (1,1);
EdgeClass IsLabelNameOf: AttributedEdge from Identifier (1,1) to Label (1,1);
EdgeClass IsHeadOfFor: AttributedEdge from ForHead (1,1) to For (1,1);
EdgeClass IsCastedValueOf: AttributedEdge from Expression (1,1) to BuiltInCast (1,1);
EdgeClass IsSubPackageOf from JavaPackage (0,1) to JavaPackage (1,1);
abstract EdgeClass IsTypeOf: AttributedEdge from Vertex (0,*) to Vertex (1,1);
abstract EdgeClass IsConditionOf: AttributedEdge from Expression (0,1) to Vertex (1,1);
EdgeClass IsTypeParameterDeclarationNameOf: AttributedEdge from Identifier (1,1) to TypeParameterDeclaration (1,1);
EdgeClass IsLoopBodyOfWhile: IsLoopBodyOf from Statement (1,1) to While (1,1);
EdgeClass IsLeftHandSideOfPostfixExpression: IsLeftHandSideOf from Expression (1,1) to PostfixExpression (1,1);
EdgeClass IsQualifiedNameOf: AttributedEdge from QualifiedName (0,*) to Vertex (0,*);
EdgeClass IsLoopBodyOfDoWhile: IsLoopBodyOf from Statement (1,1) to DoWhile (1,1);
EdgeClass IsConditionOfWhile: IsConditionOf from Expression (1,1) to While (1,1);
EdgeClass IsNameOfMethod: AttributedEdge from Identifier (1,1) to MethodDeclaration (1,1);
EdgeClass IsMessageOf: AttributedEdge from Expression (0,1) to Assert (1,1);
EdgeClass IsInterfaceNameOf: AttributedEdge from Identifier (1,1) to InterfaceDefinition (1,1);
EdgeClass IsMethodContainerOf: AttributedEdge from Expression (0,1) to MethodInvocation (1,1);
EdgeClass IsLoopBodyOfFor: IsLoopBodyOf from Statement (1,1) to For (1,1);
EdgeClass IsPartOf from TranslationUnit (0,*) to JavaPackage (1,1);
EdgeClass IsEnumerableOf: AttributedEdge from Expression (1,1) to ForEachClause (1,1);
EdgeClass IsCaughtExceptionOf: AttributedEdge from ParameterDeclaration (1,1) to Catch (1,1);
EdgeClass IsAnnotationDefinitionNameOf: AttributedEdge from Identifier (1,1) to AnnotationDefinition (1,1);
abstract EdgeClass IsExceptionThrownBy: AttributedEdge from TypeSpecification (0,*) to Member (1,1);
EdgeClass IsVariableNameOf: AttributedEdge from Identifier (1,*) to VariableDeclaration (1,1);
EdgeClass IsParameterOfForEachClause: IsParameterOf from ParameterDeclaration (1,1) to ForEachClause (1,1);
EdgeClass IsDefaultCaseOf: AttributedEdge from Default (0,1) to Switch (1,1);
abstract EdgeClass IsStatementOf: AttributedEdge from Statement (0,*) to Vertex (1,1);
abstract EdgeClass IsRightHandSideOf: AttributedEdge from Expression (1,1) to Expression (1,1);
EdgeClass IsThrownExceptionOf: AttributedEdge from Expression (1,1) to Throw (1,1);
EdgeClass IsDeclarationOfInvokedMethod from Member (0,*) to MethodInvocation (1,1);
EdgeClass IsContinueTargetOf: AttributedEdge from Label (0,1) to Continue (1,1);
EdgeClass IsStatementOfDefaultCase: IsStatementOf from Statement (0,*) to Default (1,1);
EdgeClass IsExternalDeclarationIn: AttributedEdge from ExternalDeclaration (0,*) to SourceUsage (1,1);
EdgeClass IsRunVariableInitializationOf: AttributedEdge from Statement (0,*) to TraditionalForClause (1,1);
EdgeClass IsLeftHandSideOfInfixExpression: IsLeftHandSideOf from Expression (1,1) to InfixExpression (1,1);
EdgeClass IsEnumConstantNameOf: AttributedEdge from Identifier (1,1) to EnumConstant (1,1);
EdgeClass IsBodyOfCatch: AttributedEdge from Block (1,1) to Catch (1,1);
abstract EdgeClass IsArgumentOf: AttributedEdge from Vertex (0,*) to Vertex (1,1);
EdgeClass IsMonitorOf: AttributedEdge from Expression (1,1) to Synchronized (1,1);
EdgeClass IsElementTypeOf: IsTypeOf from TypeSpecification (1,1) to ArrayType (1,1);
EdgeClass IsSizeOf: AttributedEdge from Expression (0,1) to ArrayInitializer (1,1);
EdgeClass IsReturnTypeOf: IsTypeOf from TypeSpecification (1,1) to MethodDeclaration (1,1);
EdgeClass IsModifierOfInterface: IsModifierOf from Modifier (0,*) to InterfaceDefinition (1,1);
EdgeClass IsTypeOfAnnotationField: AttributedEdge from TypeSpecification (1,1) to AnnotationField (1,1);
EdgeClass IsCastedBuiltInTypeOf: IsTypeOf from BuiltInType (1,1) to BuiltInCast (1,1);
EdgeClass IsSynchronizedBodyOf: AttributedEdge from Block (1,1) to Synchronized (1,1);
EdgeClass IsUpperBoundOfTypeParameter: AttributedEdge from TypeSpecification (0,*) to TypeParameterDeclaration (1,1);
EdgeClass IsBreakTargetOf: AttributedEdge from Label (0,1) to Break (1,1);
EdgeClass IsBodyOfConstructor: AttributedEdge from Block (1,1) to ConstructorDefinition (1,1);
abstract EdgeClass IsBlockOf: AttributedEdge from Block (1,1) to Vertex (1,1);
EdgeClass IsNameOf: AttributedEdge from Identifier (0,*) to QualifiedName (0,*);
EdgeClass IsTypeIn: AttributedEdge from Type (0,*) to Statement (1,1);
EdgeClass IsCaseOf: AttributedEdge from Case (0,*) to Switch (1,1);
EdgeClass IsBodyOfTry: AttributedEdge from Block (1,1) to Try (1,1);
abstract EdgeClass IsAnnotationOf: AttributedEdge from Annotation (0,*) to Vertex (1,1);
EdgeClass IsParameterOfMethod: IsParameterOf from ParameterDeclaration (0,*) to MethodDeclaration (1,1);
EdgeClass IsMismatchOf: AttributedEdge from Expression (1,1) to ConditionalExpression (1,1);
EdgeClass IsEnumBlockOf: IsBlockOf from Block (1,1) to EnumDefinition (1,1);
EdgeClass IsSimpleArgumentOf: IsArgumentOf from SimpleArgument (0,*) to TypeArgument (1,1);
EdgeClass IsModifierOfMethod: IsModifierOf from Modifier (0,*) to MethodDeclaration (1,1);
EdgeClass IsLowerBoundOfWildcardArgument: AttributedEdge from TypeSpecification (0,1) to WildcardArgument (1,1);
EdgeClass IsConditionOfExpression: IsConditionOf from Expression (1,1) to ConditionalExpression (1,1);
abstract EdgeClass IsTypeParameterOf: AttributedEdge from Vertex (0,*) to Vertex (1,1);
EdgeClass IsParameterOfConstructor: IsParameterOf from ParameterDeclaration (0,*) to ConstructorDefinition (1,1);
EdgeClass IsModifierOfParameter: IsModifierOf from Modifier (0,1) to ParameterDeclaration (1,1);
EdgeClass IsAnnotationBlockOf: IsBlockOf from Block (1,1) to AnnotationDefinition (1,1);
EdgeClass IsPackageNameOf: AttributedEdge from QualifiedName (1,1) to PackageDefinition (1,*);
EdgeClass IsTypeOfParameter: IsTypeOf from TypeSpecification (1,1) to ParameterDeclaration (1,1);
EdgeClass IsCommentIn: AttributedEdge from Comment (0,*) to TranslationUnit (1,1);
EdgeClass IsMatchOf: AttributedEdge from Expression (1,1) to ConditionalExpression (1,1);
EdgeClass IsTypeOfVariable: IsTypeOf from TypeSpecification (1,1) to VariableDeclaration (1,1);
abstract EdgeClass IsSuperClassOf: AttributedEdge from TypeSpecification (0,1) to Type (1,1);
abstract EdgeClass IsInterfaceOf: AttributedEdge from TypeSpecification (0,*) to Type (1,1);
EdgeClass IsForConditionOf: IsConditionOf from Expression (0,1) to TraditionalForClause (1,1);
EdgeClass IsEnumNameOf: AttributedEdge from Identifier (1,1) to EnumDefinition (1,1);
EdgeClass IsTypeOfSimpleArgument: IsTypeOf from TypeSpecification (1,1) to SimpleArgument (1,1);
EdgeClass IsInterfaceBlockOf: IsBlockOf from Block (1,1) to InterfaceDefinition (1,1);
EdgeClass IsHandlerOf: AttributedEdge from Catch (0,*) to Try (1,1);
EdgeClass IsDefaultValueOf: AttributedEdge from Expression (1,1) to AnnotationField (1,1);
EdgeClass IsMemberOf: AttributedEdge from Member (0,*) to Block (1,1);
EdgeClass IsConditionOfAssert: IsConditionOf from Expression (1,1) to Assert (1,1);
EdgeClass IsAnnotationOfPackage: IsAnnotationOf from Annotation (0,*) to PackageDefinition (1,1);
EdgeClass IsCastedTypeOf: IsTypeOf from TypeSpecification (1,1) to ClassCast (1,1);
EdgeClass IsStatementOfCase: IsStatementOf from Statement (0,*) to Case (1,1);
EdgeClass IsStatementOfBody: IsStatementOf from Statement (0,*) to Block (1,1);
EdgeClass IsElementTypeOfCreatedArray: IsTypeOf from TypeSpecification (0,1) to ArrayCreation (1,1);
EdgeClass IsCaseConditionOf: IsConditionOf from Expression (1,1) to Case (1,1);
EdgeClass IsSuperClassOfClass: IsSuperClassOf from TypeSpecification (0,1) to ClassDefinition (1,1);
EdgeClass IsClassBlockOf: IsBlockOf from Block (1,1) to ClassDefinition (1,1);
EdgeClass IsArgumentOfEnumConstant: IsArgumentOf from Expression (0,*) to EnumConstant (1,1);
EdgeClass IsRightHandSideOfInfixExpression: IsRightHandSideOf from Expression (1,1) to InfixExpression (1,1);
EdgeClass IsInterfaceOfClass: IsInterfaceOf from TypeSpecification (0,*) to ClassDefinition (1,1);
EdgeClass IsTypeParameterOfClass: IsTypeParameterOf from TypeParameterDeclaration (0,*) to ClassDefinition (1,1);
EdgeClass IsElseOf: IsStatementOf from Statement (0,1) to If (1,1);
EdgeClass IsRightHandSideOfPrefixExpression: IsRightHandSideOf from Expression (1,1) to PrefixExpression (1,1);
EdgeClass IsExceptionThrownByMethod: IsExceptionThrownBy from TypeSpecification (0,*) to MethodDeclaration (1,1);
EdgeClass IsMetaAnnotationOf: IsAnnotationOf from Annotation (0,*) to AnnotationDefinition (1,1);
EdgeClass IsConditionOfIf: IsConditionOf from Expression (1,1) to If (1,1);
EdgeClass IsExceptionThrownByConstructor: IsExceptionThrownBy from TypeSpecification (0,*) to ConstructorDefinition (1,1);
EdgeClass IsTypeParameterOfConstructor: IsTypeParameterOf from TypeParameterDeclaration (0,*) to ConstructorDefinition (1,1);
EdgeClass IsConditionOfDoWhile: IsConditionOf from Expression (1,1) to DoWhile (1,1);
EdgeClass IsAnnotationOfEnumConstant: IsAnnotationOf from Annotation (1,1) to EnumConstant (1,1);
EdgeClass IsEnumConstantBlockOf: IsBlockOf from Block (1,1) to EnumConstant (1,1);
EdgeClass IsAttachedTo: IsStatementOf from Statement (1,1) to Label (1,1);
EdgeClass IsSwitchArgumentOf: IsArgumentOf from Expression (1,1) to Switch (1,1);
EdgeClass IsAnnotationOfVariable: IsAnnotationOf from Annotation (0,*) to VariableDeclaration (1,1);
EdgeClass IsThenOf: IsStatementOf from Statement (1,1) to If (1,1);
EdgeClass IsWildcardArgumentOf: IsArgumentOf from WildcardArgument (0,*) to TypeArgument (1,1);
EdgeClass IsArgumentOfMethodInvocation: IsArgumentOf from Expression (0,*) to MethodInvocation (1,1);
EdgeClass IsSuperClassOfInterface: IsSuperClassOf from TypeSpecification (0,1) to InterfaceDefinition (1,1);
EdgeClass IsAnnotationOfType: IsAnnotationOf from Annotation (0,*) to Type (1,1);
EdgeClass IsTypeParameterOfInterface: IsTypeParameterOf from TypeParameterDeclaration (0,*) to InterfaceDefinition (1,1);
EdgeClass IsInterfaceOfEnum: IsInterfaceOf from TypeSpecification (0,*) to EnumDefinition (1,1);
EdgeClass IsAnnotationOfMember: IsAnnotationOf from Annotation (0,*) to Member (1,1);
EdgeClass IsTypeParameterOfMethod: IsTypeParameterOf from TypeParameterDeclaration (0,*) to MethodDeclaration (1,1);

Graph "JavaExample_672" Java5 (1000 1000 78 115) \null \null;
1 Program <-1 -68> "JavaExample";
2 TranslationUnit <1 -2 -4>;
3 SourceUsage <2 -3 -67> 0;
4 SourceFile <3 4> "/Users/riediger/src/re-group/project/javaextractor/testit/wsr08/Main.java";
5 ClassDefinition <-5 -6 -66 67> f "Main" "Main";
6 Modifier <5 7 72 74 94> PUBLIC;
7 Identifier <6> "Main";
8 Block <-38 -65 66>;
9 MethodDefinition <-7 -8 -9 -10 -13 -37 38>;
10 Modifier <8 40 75 95> STATIC;
11 BuiltInType <9> VOID;
12 Identifier <10> "main";
13 ParameterDeclaration <-11 -12 13>;
14 QualifiedType <11> "String";
15 Identifier <12> "args";
16 Block <-17 -22 -36 37>;
17 VariableDeclaration <-14 -15 -16 17 30>;
18 BuiltInType <15 19 41 43 46 76 78 81 96 98> INT;
19 Identifier <14 29> "a";
20 IntegerConstant <16> "26" 26;
21 VariableDeclaration <-18 -19 -21 22 33>;
22 Identifier <18 32> "b";
23 IntegerConstant <20> "5" 5;
24 PrefixExpression <-20 21> MINUS;
25 MethodInvocation <-26 -27 -35 36> METHOD;
26 FieldAccess <-23 25>;
27 Identifier <23> "System";
28 FieldAccess <-24 -25 27>;
29 Identifier <24> "out";
30 Identifier <26> "println";
31 MethodInvocation <-28 -31 -34 35 -113> METHOD;
32 Identifier <28> "compute";
33 FieldAccess <-29 -30 31>;
34 FieldAccess <-32 -33 34>;
35 MethodDefinition <-39 -40 -41 -42 -45 -48 -64 65 113>;
36 Modifier <39> PRIVATE;
37 Identifier <42> "compute";
38 ParameterDeclaration <-43 -44 45 56>;
39 Identifier <44 55> "a";
40 ParameterDeclaration <-46 -47 48 59>;
41 Identifier <47 58> "b";
42 Block <-63 64>;
43 Return <-62 63>;
44 MethodInvocation <-50 -51 -61 62 -115> METHOD;
45 FieldAccess <-49 51 -112>;
47 Identifier <50> "twice";
48 MethodInvocation <-53 -54 -57 -60 61 -114> METHOD;
49 FieldAccess <-52 54 -111>;
50 Identifier <52 49> "Utility";
51 Identifier <53> "add";
52 FieldAccess <-55 -56 57>;
53 FieldAccess <-58 -59 60>;
54 TranslationUnit <68 -69 -71>;
55 SourceUsage <69 -70 -110> 0;
56 SourceFile <70 71> "/Users/riediger/src/re-group/project/javaextractor/testit/wsr08/Utility.java";
57 ClassDefinition <-72 -73 -109 110 111 112> f "Utility" "Utility";
58 Identifier <73> "Utility";
59 Block <-93 -108 109>;
60 MethodDefinition <-74 -75 -76 -77 -80 -83 -92 93 114>;
61 Identifier <77> "add";
62 ParameterDeclaration <-78 -79 80 85>;
63 Identifier <79 84> "x";
64 ParameterDeclaration <-81 -82 83 88>;
65 Identifier <82 87> "y";
66 Block <-91 92>;
67 Return <-90 91>;
68 FieldAccess <-84 -85 86>;
69 InfixExpression <-86 -89 90> PLUS;
70 FieldAccess <-87 -88 89>;
71 MethodDefinition <-94 -95 -96 -97 -100 -107 108 115>;
72 Identifier <97> "twice";
73 ParameterDeclaration <-98 -99 100 103>;
74 Identifier <99 102> "x";
75 Block <-106 107>;
76 Return <-105 106>;
77 IntegerConstant <101> "2" 2;
78 InfixExpression <-101 -104 105> MULTIPLICATION;
79 FieldAccess <-102 -103 104>;
1 IsTranslationUnitIn;
2 IsSourceUsageIn;
3 IsSourceFor;
4 IsPrimarySourceFor;
5 IsModifierOfClass 1 6 1 0;
6 IsClassNameOf 14 4 1 13;
7 IsModifierOfMethod 2 6 2 21;
8 IsModifierOfMethod 9 6 2 28;
9 IsReturnTypeOf 16 4 2 35;
10 IsNameOfMethod 21 4 2 40;
11 IsTypeOfParameter 26 6 2 45;
12 IsParameterNameOf 35 4 2 54;
13 IsParameterOfMethod 26 13 2 45;
14 IsVariableNameOf 7 1 3 68;
15 IsTypeOfVariable 3 3 3 64;
16 IsInitializerOfVariable 11 2 3 72;
17 IsStatementOfBody 3 11 3 64;
18 IsVariableNameOf 7 1 4 82;
19 IsTypeOfVariable 3 3 4 78;
20 IsRightHandSideOfPrefixExpression 12 1 4 87;
21 IsInitializerOfVariable 11 2 4 86;
22 IsStatementOfBody 3 11 4 78;
23 IsFieldNameOf 3 6 6 93;
24 IsFieldNameOf 10 3 6 100;
25 IsFieldContainerOf 3 6 6 93;
26 IsNameOfInvokedMethod 14 7 6 104;
27 IsMethodContainerOf 3 10 6 93;
28 IsNameOfInvokedMethod 22 7 6 112;
29 IsFieldNameOf 30 1 6 120;
30 IsDeclarationOfAccessedField;
31 IsArgumentOfMethodInvocation 30 1 6 120;
32 IsFieldNameOf 33 1 6 123;
33 IsDeclarationOfAccessedField;
34 IsArgumentOfMethodInvocation 33 1 6 123;
35 IsArgumentOfMethodInvocation 22 13 6 112;
36 IsStatementOfBody 3 34 6 93;
37 IsBodyOfMethod 41 70 2 60;
38 IsMemberOf 2 109 2 21;
39 IsModifierOfMethod 2 7 9 133;
40 IsModifierOfMethod 10 6 9 141;
41 IsReturnTypeOf 17 3 9 148;
42 IsNameOfMethod 21 7 9 152;
43 IsTypeOfParameter 29 3 9 160;
44 IsParameterNameOf 33 1 9 164;
45 IsParameterOfMethod 29 5 9 160;
46 IsTypeOfParameter 36 3 9 167;
47 IsParameterNameOf 40 1 9 171;
48 IsParameterOfMethod 36 5 9 167;
49 IsFieldNameOf 10 7 10 185;
50 IsNameOfInvokedMethod 18 5 10 193;
51 IsMethodContainerOf 10 7 10 185;
52 IsFieldNameOf 24 7 10 199;
53 IsNameOfInvokedMethod 32 3 10 207;
54 IsMethodContainerOf 24 7 10 199;
55 IsFieldNameOf 36 1 10 211;
56 IsDeclarationOfAccessedField;
57 IsArgumentOfMethodInvocation 36 1 10 211;
58 IsFieldNameOf 39 1 10 214;
59 IsDeclarationOfAccessedField;
60 IsArgumentOfMethodInvocation 39 1 10 214;
61 IsArgumentOfMethodInvocation 24 17 10 199;
62 IsReturnedBy 10 32 10 185;
63 IsStatementOfBody 3 40 10 178;
64 IsBodyOfMethod 43 47 9 174;
65 IsMemberOf 2 88 9 133;
66 IsClassBlockOf 19 205 1 18;
67 IsExternalDeclarationIn 1 223 1 0;
68 IsTranslationUnitIn;
69 IsSourceUsageIn;
70 IsSourceFor;
71 IsPrimarySourceFor;
72 IsModifierOfClass 1 6 3 2;
73 IsClassNameOf 14 7 3 15;
74 IsModifierOfMethod 2 6 4 26;
75 IsModifierOfMethod 9 6 4 33;
76 IsReturnTypeOf 16 3 4 40;
77 IsNameOfMethod 20 3 4 44;
78 IsTypeOfParameter 24 3 4 48;
79 IsParameterNameOf 28 1 4 52;
80 IsParameterOfMethod 24 5 4 48;
81 IsTypeOfParameter 31 3 4 55;
82 IsParameterNameOf 35 1 4 59;
83 IsParameterOfMethod 31 5 4 55;
84 IsFieldNameOf 10 1 5 73;
85 IsDeclarationOfAccessedField;
86 IsLeftHandSideOfInfixExpression 10 1 5 73;
87 IsFieldNameOf 14 1 5 77;
88 IsDeclarationOfAccessedField;
89 IsRightHandSideOfInfixExpression 14 1 5 77;
90 IsReturnedBy 10 5 5 73;
91 IsStatementOfBody 3 13 5 66;
92 IsBodyOfMethod 38 20 4 62;
93 IsMemberOf 2 56 4 26;
94 IsModifierOfMethod 2 6 8 85;
95 IsModifierOfMethod 9 6 8 92;
96 IsReturnTypeOf 16 3 8 99;
97 IsNameOfMethod 20 5 8 103;
98 IsTypeOfParameter 26 3 8 109;
99 IsParameterNameOf 30 1 8 113;
100 IsParameterOfMethod 26 5 8 109;
101 IsLeftHandSideOfInfixExpression 10 1 9 127;
102 IsFieldNameOf 14 1 9 131;
103 IsDeclarationOfAccessedField;
104 IsRightHandSideOfInfixExpression 14 1 9 131;
105 IsReturnedBy 10 5 9 127;
106 IsStatementOfBody 3 13 9 120;
107 IsBodyOfMethod 33 20 8 116;
108 IsMemberOf 2 51 8 85;
109 IsClassBlockOf 22 116 3 23;
110 IsExternalDeclarationIn 1 137 3 2;
111 IsDeclarationOfAccessedField;
112 IsDeclarationOfAccessedField;
113 IsDeclarationOfInvokedMethod;
114 IsDeclarationOfInvokedMethod;
115 IsDeclarationOfInvokedMethod;
